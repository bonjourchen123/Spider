<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" 
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
           http://www.springframework.org/schema/beans/spring-beans-3.2.xsd           
           http://www.springframework.org/schema/tx 
           http://www.springframework.org/schema/tx/spring-tx-3.2.xsd           
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-3.2.xsd
           http://www.springframework.org/schema/aop 
           http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"        
	default-autowire="byName">
	<aop:aspectj-autoproxy proxy-target-class="true"/>
	<context:annotation-config /> 
	<context:component-scan base-package="org.iii" use-default-filters="false">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Component" />
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller" />
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Repository" />
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Service" />
	</context:component-scan>
<!-- 	<util:properties id="systemConfigurer" location="classpath:system.properties" /> -->
	<context:property-placeholder location="classpath:datasource.properties" />
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource"> 
            <property name="driverClassName" value="${dataSource.driverClassName}" />
            <property name="url" value="${dataSource.url}" />
            <property name="username" value="${dataSource.username}" />
			<property name="password" value="${dataSource.password}" />
<!--        	<property name="driverClassName" value="org.h2.Driver" />
            <property name="url" value="jdbc:h2:mem:iii;DB_CLOSE_DELAY=-1" />         
            <property name="username" value="sa" />             
        	<property name="password" value="sldb01" />	  -->           
    </bean>        
    
	<!-- Hibernate -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory">
			<ref local="sessionFactory" />
		</property>
	</bean>
	
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean ">
		<property name="dataSource">
			<ref bean="dataSource" />
		</property>
<!-- 		<property name="configLocation" value="classpath:hibernate.cfg.xml"/> -->
		<property name="packagesToScan" value="org.iii.**.entity">
<!--        	<list>
            <value>org.iii.core.security</value>
            <value>org.iii.module</value>
        </list> -->		
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.jdbc.batch_size">30</prop>
				<prop key="hibernate.max_fetch_depth">2</prop>
				<prop key="hibernate.jdbc.fetch_size">100</prop>
				<prop key="hibernate.jdbc.batch_versioned_data">true</prop>
				<prop key="hibernate.jdbc.use_streams_for_binary">true</prop>
				<prop key="hibernate.cache.use_query_cache">false</prop>
				<prop key="hibernate.cache.provider_class">org.hibernate.cache.EhCacheRegionFactory</prop>
				<prop key="hibernate.order_updates">true</prop>
				<prop key="hibernate.query.factory_class">org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory</prop>
				<prop key="hibernate.cache.use_second_level_cache">false</prop>
				<prop key="hibernate.current_session_context_class">org.springframework.orm.hibernate4.SpringSessionContext</prop>
				<prop key="hibernate.connection.release_mode">auto</prop>
				<prop key="hibernate.autoReconnect">true</prop>
				<prop key="hibernate.cglib.use_reflection_optimizer">true</prop>
 				<prop key="hibernate.dialect">${hibernate.dialect}</prop> 
<!--				<prop key="hibernate.dialect">org.hibernate.dialect.H2Dialect</prop> -->
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.use_sql_comments">false</prop>
				<!-- hibernate分頁出現 ResultSet may only be accessed in a forward direction, 需要設置hibernate結果集滾動為false -->
				<prop key="hibernate.jdbc.use_scrollable_resultset">false</prop>
				<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
				<!-- <prop key="hibernate.hbm2ddl.auto">update</prop> -->
			</props>
		</property>
	</bean>
	
     <tx:advice id="txAdvice" transaction-manager="transactionManager" >  
        <tx:attributes>   
            <tx:method name="*"   
                rollback-for="HibernateException"  
                propagation="REQUIRED"   
            />  
        </tx:attributes>  
    </tx:advice>  
      
	<aop:config expose-proxy="true">
		<aop:pointcut id="serviceOperation" expression="execution(* org.iii..*.service..*.*(..))" />
		<aop:advisor pointcut-ref="serviceOperation" advice-ref="txAdvice" />
	</aop:config>  	
</beans>	
